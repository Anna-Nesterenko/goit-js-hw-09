{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAxCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYf,EAAKa,EAALb,MAAOgB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,QAO7B,SAA4BjB,EAAOgB,EAAMC,GACvC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCpB,EAAcoB,EAAGlB,GACdmB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALpB,M,OACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANJ,EAAM,UAGjDK,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALpB,M,OAClBsB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANJ,EAAM,UAEvErB,GAASgB,GAhBXY,EAAoB5B,EAAM6B,OAAQb,EAAKa,MAAOZ,EAAOY,OAErDlB,EAAEG,cAAcgB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  createManyPromises(+delay.value, +step.value, amount.value);\n\n  e.currentTarget.reset();\n}\n\nfunction createManyPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","i","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createManyPromises","value","reset"],"version":3,"file":"03-promises.33c02350.js.map"}